{"version":3,"sources":["utils/DataAreaContext.js","components/DataBody/index.js","components/DataTable/index.js","components/SearchName/index.js","components/Nav/index.js","utils/API.js","components/DataArea/index.js","components/Main/Main.js","components/Wrapper/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaContext","React","createContext","DataBody","context","useContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","DataTable","id","headings","width","style","onClick","handleSort","toLowerCase","SearchName","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","data","Provider","value","event","filter","filteredList","item","indexOf","heading","sortedUsers","sort","a","b","localeCompare","length","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67c703a8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DataAreaContext = React.createContext({\n\n});\n\nexport default DataAreaContext;","import React, { useContext } from \"react\";\nimport \"./DataBody.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\n\nconst DataBody = () => {\n  const context = useContext(DataAreaContext);\n\n  const formatDate = (date) => {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  };\n\n  return (\n    <tbody>\n      {context.developerState.filteredUsers[0] !== undefined &&\n      context.developerState.filteredUsers[0].name !== undefined ? (\n        context.developerState.filteredUsers.map(\n          ({ login, name, picture, phone, email, dob }) => {\n            return (\n              <tr key={login.uuid}>\n                <td data-th=\"Image\" className=\"align-middle\">\n                  <img\n                    src={picture.medium}\n                    alt={\"profile image for \" + name.first + \" \" + name.last}\n                    className=\"img-responsive\"\n                  />\n                </td>\n                <td data-th=\"Name\" className=\"name-cell align-middle\">\n                  {name.first} {name.last}\n                </td>\n                <td data-th=\"Phone\" className=\"align-middle\">\n                  {phone}\n                </td>\n                <td data-th=\"Email\" className=\"align-middle\">\n                  <a href={\"mailto:\" + email} target=\"__blank\">\n                    {email}\n                  </a>\n                </td>\n                <td data-th=\"DOB\" className=\"align-middle\">\n                  {formatDate(dob.date)}\n                </td>\n              </tr>\n            );\n          }\n        )\n      ) : (\n        <>\n        </>\n      )}\n    </tbody>\n  );\n};\n\nexport default DataBody;","import React, { useContext } from \"react\";\nimport DataBody from \"../DataBody\";\nimport \"./DataTable.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\n\nconst DataTable = () => {\n  const context = useContext(DataAreaContext);\n\n  return (\n    <div className=\"datatable mt-5\">\n      <table\n        id=\"table\"\n        className=\"table table-striped table-hover table-condensed\"\n      >\n        <thead>\n          <tr>\n            {context.developerState.headings.map(({ name, width }) => {\n              return (\n                <th\n                  className=\"col\"\n                  key={name}\n                  style={{ width }}\n                  onClick={() => {\n                    context.handleSort(name.toLowerCase());\n                  }}\n                >\n                  {name}\n                  <span className=\"pointer\"></span>\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n\n        <DataBody />\n      </table>\n    </div>\n  );\n};\n\nexport default DataTable;\n","import React, { useContext } from \"react\";\nimport \"./SearchName.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\n\nconst SearchName = () => {\n  const context = useContext(DataAreaContext);\n\n  return (\n    <div className=\"searchbox\">\n      <form className=\"form-inline\">\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search Here\"\n          aria-label=\"Search Here\"\n          onChange= {e => context.handleSearchChange(e)}\n        />\n        <button \n          className=\"btn my-2 my-sm-0\" \n          type=\"submit\">\n            Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchName","import React from \"react\";\nimport SearchName from \"../SearchName\";\nimport \"./Nav.css\";\n\nconst Nav = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"search-area col-4\">\n        <SearchName />\n      </div>\n    </nav>\n  );\n};\nexport default Nav;\n","import axios from \"axios\";\n\nexport default {\n  // get all users function\n  getUsers: function(){\n    return axios.get(\"https:/randomuser.me/api/?results=200&nat=us\")\n  }\n};","import React, { useState, useEffect } from \"react\";\nimport DataTable from \"../DataTable\";\nimport Nav from \"../Nav\";\nimport API from \"../../utils/API\";\nimport \"./DataArea.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\n\nconst DataArea = () => {\n  const [developerState, setDeveloperState] = useState({\n    users: [],\n    order: \"ascend\",\n    filteredUsers: [],\n    headings: [\n      { name: \"Image\", width: \"10%\" },\n      { name: \"Name\", width: \"10%\" },\n      { name: \"Phone\", width: \"20%\" },\n      { name: \"Email\", width: \"20%\" },\n      { name: \"DOB\", width: \"10%\" },\n    ],\n  });\n\n  const handleSort = (heading) => {\n    if (developerState.order === \"descend\") {\n      setDeveloperState({\n        order: \"ascend\",\n      });\n    } else {\n      setDeveloperState({\n        order: \"descend\",\n      });\n    }\n\n    const compareFnc = (a, b) => {\n      if (developerState.order === \"ascend\") {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } else if (heading === \"name\") {\n          return a[heading].first.localeCompare(b[heading].first);\n        } else {\n          return a[heading] - b[heading];\n        }\n      } else {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } else if (heading === \"name\") {\n          return b[heading].first.localeCompare(a[heading].first);\n        } else {\n          return b[heading] - a[heading];\n        }\n      }\n    };\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n\n    setDeveloperState({\n      ...developerState,\n      filteredUsers: sortedUsers,\n    });\n  };\n\n  const handleSearchChange = (event) => {\n    const filter = event.target.value;\n    const filteredList = developerState.users.filter((item) => {\n      let values = item.name.first.toLowerCase();\n      return values.indexOf(filter.toLowerCase()) !== -1;\n    });\n\n    setDeveloperState({\n      ...developerState,\n      filteredUsers: filteredList,\n    });\n  };\n// on load of the page, load data from API and insert into devState\n  useEffect(() => {\n    API.getUsers().then((results) => {\n      setDeveloperState({\n        ...developerState,\n        users: results.data.results,\n        filteredUsers: results.data.results,\n      });\n    });\n  },[]);\n  // dependancy array-\n// !What is empty array doing???\n  return (\n    <DataAreaContext.Provider\n      value={{ developerState, handleSearchChange, handleSort }}>\n      <Nav />\n      <div className=\"data-area\">\n        {developerState.filteredUsers.length > 0 ? <DataTable /> : <div></div>}\n      </div>\n    </DataAreaContext.Provider>\n  );\n};\n\nexport default DataArea;\n","import React from \"react\";\nimport DataArea from \"../DataArea/index.js\";\n// import \"./Main.css\";\n\nconst Main = () => {\n  return (\n    <>\n    <DataArea/>\n    </>\n  );\n};\n\nexport default Main;","import React from \"react\";\n// import \"./Wrapper.css\";\n\nconst Wrapper = ({ children }) => {\n  return <div className=\"wrapper\">{children}</div>;\n}\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1>StaffBase</h1>\n      <p>\n        Click on name heading to sort or use the search box to narrow your\n        results!\n      </p>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Main from './components/Main/Main';\nimport Wrapper from './components/Wrapper';\nimport Header from \"./components/Header/index\";\n// import logo from './logo.svg';\nimport './App.css';\n// main setup on app visually\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header/>\n        <Main/>\n      </Wrapper>\n    </div>\n    );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}